def javacGenSources = "${buildDir}/generated-sources/javac"
def hibernateVersion = '5.2.9.Final'

apply plugin: 'idea'

dependencies {
    dependencies {
        // Annotation processor to generate entity metamodels
        compileOnly 'org.projectlombok:lombok:1.16.8'
        compileOnly "org.hibernate:hibernate-jpamodelgen:5.2.9.Final"
        compileOnly group: 'org.hibernate', name: 'hibernate-core', version: '5.2.9.Final'
        compileOnly group: 'org.eclipse.persistence', name: 'javax.persistence', version: '2.1.1'

    }

    compileJava {
        doFirst({
            new File(javacGenSources).mkdirs()
        })
        options.compilerArgs += ["-s", javacGenSources]
    }

    sourceSets {
        generated {
            java {
                srcDirs = ["src/main/java", javacGenSources]
                // A dirty trick to make idea parse the sources generated by javac, but prevent gradle from compiling it
                // In theory, this should be a oneliner like: idea.module.generatedSourceDirs = [file(javacGenSources)]
                // Unfortunately it doesn't work in a straighforward manner.
                excludes = ['**']
            }
        }
    }
}
idea {
    module {
        excludeDirs = [file("$buildDir/tmp"), file("$buildDir/libs"), file("$buildDir/classes")]
        // BOTH idea.module.generatedSourceDirs and extra source set definition are required
        // to support compiling from IDEA and have code highligting working.
        // Without source set definition, generated source root will not be picked at all
        // (the code will still compile from IDE, but highlighting will be broken)
        // Without the line below, root will be picked as normal root, not as generated one.
        // In this case highlighting will work, however attempt to compile from IDE will fail
        // because of duplicate class.
        // Checkbox "create separate module per source set" must be unchecked to work flawlessly
        generatedSourceDirs = [file("$buildDir/generated-sources/javac")]
    }
}